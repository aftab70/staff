####################################################################################################################################################################

Internet speed uisng terminal

#!/bin/bash

curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -

####################################################################################################################################################################

Apache bots reports

#!bin/bash

cd /var/lib/jenkins/workspace/apache_live_ip_bases_hits/

ROBOT=$(cat access.log.1 | grep robot | awk '{print $7}' | head -n 1)
BOT_HITS=$(cat access.log.1 | grep robot | wc -l)
IP_ADDR=$(cat access.log.1 | grep robot | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | sort -n  |  uniq -c | sort -nr)
GOOGLE_BOT_COUNT=$(cat access.log.1 | grep robot | grep Googlebot | wc -l)
LAST_GOOGLE_VISIT=$(cat access.log.1 | grep robot | grep Googlebot | tail -n 1)
BING_BOT_COUNT=$(cat access.log.1 | grep robot | grep bingbot | wc -l)
LAST_BING_VISIT=$(cat access.log.1 | grep robot | grep bingbot | tail -n 1)
UNKNOW_BOTS_VISIT=$(cat access.log.1 | grep robot | grep -v bingbot | grep -v Googlebot | tail -n 5)


if [ "$ROBOT" = "/robots.txt" ]
then
        echo ""
        echo "Bots hits in last 24 hours is $BOT_HITS" 
        echo ""
        echo "Top bots by IP Address details are given below:--"
        echo ""
        echo "$IP_ADDR"
        echo ""
        echo "Google Bot hits in last 24 hours is $GOOGLE_BOT_COUNT"
        echo ""
        echo "Google bots visit details are mentioed below:-"
        echo ""
        echo "$LAST_GOOGLE_VISIT"
        echo ""
        echo "Bing Bot hits in last 24 hours in $BING_BOT_COUNT"
        echo ""
        echo "Bing bots visit details are mentioed below:--"
        echo ""
        echo "$LAST_BING_VISIT"
        echo ""
        echo "Unknow bots vist details are mentioed below:-"
        echo ""
        echo "$UNKNOW_BOTS_VISIT"
        echo ""
else
        echo ""
        echo "No bot's hit found on the Apache access logs"
        echo ""
        
################################################################################################################################################################

Apache_hits

#!/bin/bash

set -e

TOTOAL_HITS=$(cat access.log.1 | wc -l)
EXTERNAL_HITS=$(cat access.log.1 | grep -v 192.168.0.10 | wc -l)
ENTERNAL_HITS=$(cat access.log.1 | grep 192.168.0.10 | wc -l)
TOP_25_IP_ADDR_HITS=$(cat access.log.1 | grep -v 192.168.0.10 | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | sort -n  |  uniq -c | sort -nr | head -n 25)


echo "Dear Team,"
echo ""
echo "Please find the below details:--"
echo "------------------------------------------------------------------------"
echo ""
echo "In last 24 hours total hits on Apache Web Server is $TOTOAL_HITS"
echo ""
echo "In last 24 hours external hits on Apache Web server is $EXTERNAL_HITS"
echo ""
echo "In last 24 hours total enternal hits on Apache web server is $ENTERNAL_HITS"
echo ""
echo "In last 24 hours top 25 IP external IP address given below:-"
echo ""
echo "$TOP_25_IP_ADDR_HITS"
echo ""

#################################################################################################################################################################

apache_live_ip_bases_hits

#!/bin/bash

scp -r -i "/home/aftab/Documents/aftab.pem" aftab@192.168.0.10:/var/log/apache2/access.log.1  .
scp -r -i "/home/aftab/Documents/aftab.pem" aftab@192.168.0.10:/var/log/apache2/error.log.1 .
echo ""
echo ""
echo "Apache IP based hits"
echo ""
awk '{print $1}' access.log.1 | sort -n  |  uniq -c | sort -nr
echo ""
ERROR=$(cat error.log.1 | wc -l)
echo ""
echo "Total error count is $ERROR"
echo ""
TEN_ERROR=$(cat error.log.1 | head -n 10)
echo "$TEN_ERROR"
echo ""
echo ""
echo "Please find the access and error logs"

ROBOT=$(cat access.log.1 | grep robot | awk '{print $7}' | head -n 1)
BOT_HITS=$(cat access.log.1 | grep robot | wc -l)
IP_ADDR=$(cat access.log.1 | grep robot | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | sort -n  |  uniq -c | sort -nr)
GOOGLE_BOT_COUNT=$(cat access.log.1 | grep robot | grep Googlebot | wc -l)
LAST_GOOGLE_VISIT=$(cat access.log.1 | grep robot | grep Googlebot | tail -n 1)
BING_BOT_COUNT=$(cat access.log.1 | grep robot | grep bingbot | wc -l)
LAST_BING_VISIT=$(cat access.log.1 | grep robot | grep bingbot | tail -n 1)
UNKNOW_BOTS_VISIT=$(cat access.log.1 | grep robot | grep -v bingbot | grep -v Googlebot | tail -n 5)


if [ "$ROBOT" = "/robots.txt" ]
then
        echo ""
        echo "Bots hits in last 24 hours is $BOT_HITS" 
        echo ""
        echo "Top bots by IP Address details are given below:--"
        echo ""
        echo "$IP_ADDR"
        echo ""
        echo "Google Bot hits in last 24 hours is $GOOGLE_BOT_COUNT"
        echo ""
        echo "Google bots visit details are mentioed below:-"
        echo ""
        echo "$LAST_GOOGLE_VISIT"
        echo ""
        echo "Bing Bot hits in last 24 hours in $BING_BOT_COUNT"
        echo ""
        echo "Bing bots visit details are mentioed below:--"
        echo ""
        echo "$LAST_BING_VISIT"
        echo ""
        echo "Unknow bots vist details are mentioed below:-"
        echo ""
        echo "$UNKNOW_BOTS_VISIT"
        echo ""
else
        echo ""
        echo "No bot's hit found on the Apache access logs"
        echo "" 
fi



#################################################################################################################################################################

API_Response_Time

#!/bin/bash

set -e

YESTERDAY=$(date -d "1 day ago" '+%Y-%m-%d')

rm -rf *

scp -r -i "/home/aftab/Documents/aftab.pem" aftab@192.168.0.10:/opt/tomcat/logs/live_access_log."$YESTERDAY".txt  .
mv live_access_log."$YESTERDAY".txt number.txt

echo ""
echo ""
echo "Dear Team"
echo ""
echo "This is the system generated API response time of $YESTERDAY"
echo ""
echo ""
#echo "Please find the top 50 highest max response time on the details:--"
#echo ""
##awk '{print $9, $7}' number.txt | sort -n  | sort -nr | head -n 50
#echo ""
#echo ""
#echo "Please find average response time of the API's"


ORG_FILE="number.txt"
awk '{print $7}' "$ORG_FILE" > GAPI_LIST.txt
G_API_LIST="GAPI_LIST.txt"
awk -F, '!seen[$1]++' GAPI_LIST.txt > UNIQUE_API_URL.txt
U_API_URL="UNIQUE_API_URL.txt"
U_API_HITS=$(cat UNIQUE_API_URL.txt | wc -l)
echo "Total API name count is $U_API_HITS"
echo ""
n=2
while [ $n -le $U_API_HITS ];do
        sed -n "$n"p "$U_API_URL" > "$n".txt
        n=$((n+1))
done
N=2
while [ $N -le  $U_API_HITS ];do
        cat number.txt | grep `(cat "$N".txt)` > saprate_"$N".txt
        N=$((N+1))
done
echo "" > res_time.txt
N2=2
while [ $N2 -le  $U_API_HITS ];do
        echo `awk -F : '{sum+=$1} END {print "AVG=",sum/NR}' saprate_"$N2".txt` millisecond "----->"`cat "$N2".txt`  >> res_time.txt
        N2=$((N2+1))
done
cat res_time.txt
echo ""

#################################################################################################################################################################

otp

#!/usr/bin/python3

import pymysql
import sys
import os

db = pymysql.connect("ip_address","username","password","database_name",port=3308 )

cur = db.cursor()

cur.execute("""SELECT USER_ID,FIRST_NAME,LAST_NAME,VERIFICATION_CODE_EMAIL FROM USER ORDER BY ADD_DATE_TIME DESC LIMIT 0,3;""")

email_otp = cur.fetchall()

print("--------------------------------------------------------------------")
print("UAT USER OTP DETAILS :---")
print("")
print("Your Email OTP is ")
print(email_otp)

cur.execute("""SELECT USER_ID,FIRST_NAME,LAST_NAME,VERIFICATION_CODE_MOBILE FROM USER ORDER BY ADD_DATE_TIME DESC LIMIT 0,3 ;""")

mobile_otp = cur.fetchall()

print("Your mobile OTP is ")
print(mobile_otp)

print("--------------------------------------------------------------------")
cur.execute("""SELECT STATUS,OTP FROM SOCIAL_OTP ORDER BY ADD_DATE_TIME DESC LIMIT 0,3 ;""")
social_otp = cur.fetchall()
print("UAT SOCIAL OTP DETAILS :---")
print("")
print("Your SOCIAL OTP is ")
print(social_otp)

print("---------------------------------------------------------------------")
cur.execute("""SELECT STATUS,OTP FROM OTP ORDER BY ADD_DATE_TIME DESC LIMIT 0,3 ;""")
otp = cur.fetchall()
print("UAT OTP DETAILS :---")
print("")
print("Your OTP is ")
print(otp)



db.close()

#################################################################################################################################################################


Increase CPU load    -  

sudo apt-get install stress -y
stress --cpu 4

#################################################################################################################################################################

Disk Usage -

 du -hs * | sort -rh | head -100
 
 #################################################################################################################################################################
 
 Aws s3 file upload cmd -
 
 aws s3 cp  target_path/   s3://s3bucket_name --recursive --acl public-read-write
eg: aws s3 cp  dist/study24x7/ s3://uat.study24x7.com --recursive --acl public-read-write

#################################################################################################################################################################

Clear cache memory in linux system

sync; echo 1 > /proc/sys/vm/drop_caches
sync; echo 2 > /proc/sys/vm/drop_caches
sync; echo 3 > /proc/sys/vm/drop_caches 

##################################################################################################################################################################

Pem file scp -

scp -r -i "/home/aftab/Documents/aftab.pem" target_path username@IP_Address:PATH
scp -r -i "/home/aftab/Documents/aftab.pem" user_name@IP_Address:PATH  .


##################################################################################################################################################################

Logs Hits 

awk '{print $10}' file_name | sort -n  |  uniq -c | sort -nr

##################################################################################################################################################################

rsync  -

rsync -avzh /SOURCE_PATH/* /Destination_path/

##################################################################################################################################################################

git clone from branch -

git clone http://web_aaddress.git -b branch_name

##################################################################################################################################################################

Mariadb - Dump

/opt/mariadb1/mariadb1/bin/mysqldump -S /opt/mariadb1/mariadb1-data/mariadb.sock 
-P 3307 --single-transaction=TRUE -u root -pPASSWORD databases_name > dump.sql

####################################################################################################################################################################

Mariadb - Restore 

/opt/mariadb1/mariadb1/bin/mysql -S /opt/mariadb1/mariadb1-data/mariadb.sock -P 3307
 -u root -pPASSWROD database_name_here < dump.sql
 
 #################################################################################################################################################################
 
 MongoDB Full Backup
 
 mongodump --host localhost --port 27017 --username root --password "admin@password_here" --authenticationDatabase admin --out .
 
 #################################################################################################################################################################
 
 ssh copy ID
 
 ssh-copy-id user@hostname.example.com
 
 #################################################################################################################################################################
 
 
 PHP Installation
 
 https://tecadmin.net/install-php-7-on-ubuntu/
 
 ################################################################################################################################################################
 
 Angular Installation -
 
 https://github.com/angular/angular-cli/issues/7735
 
 ################################################################################################################################################################
 
 elasticsearch
 
 curl -XPOST localhost:9200/kibana_testing_21june19_new/4/_bulk?pretty  -H "Content-Type: application/x-ndjson" --data-binary  @'/home/ginger/kibanatesting.json'


#################################################################################################################################################################

Apache SSL 

https://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-apache-in-ubuntu-16-04

#################################################################################################################################################################

Elasticsearch Read only Mode 

https://discuss.elastic.co/t/elk-stuck-in-read-only-mode/153478/2

##################################################################################################################################################################

Forbidden Kibana

https://discuss.elastic.co/t/forbidden-12-index-read-only-allow-delete-api/110282/5

##################################################################################################################################################################

NPM INCREASE MEMORY

https://www.npmjs.com/package/increase-memory-limit

##################################################################################################################################################################

TimeStamp logs 

sed -n '/10:00:00/ , /12:01:02/p' catalina.out

##################################################################################################################################################################

rysnc 

rsync -avhz -e "ssh -i /home/aftab/Documents/comet.pem" file.php  aftab@192.168.0.10:/var/www/html/

rsync -avhz -e "ssh -i /home/aftab/Documents/comet.pem"  Logo.png  aftab@192.168.0.10:/var/www/html/

rsync -avhz -e "ssh -i /home/aftab/Documents/comet.pem"  playbutton.svg  aftab@192.168.0.10:/var/www/html/

##################################################################################################################################################################

Command 	For
awk '{print $10}' live.csv | sort -n  |  uniq -c | sort -nr	                                  To get server hits count 
awk '{print $12,$10}' Save.csv | sort -n  |  uniq -c | sort -nr	                                  To get Response Time
cat Logs.csv |  grep 149.129.131.177 |    cut -d']' -f2  |grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | sort -n  |  uniq -c | sort -nr	DDOS Attack
"awk '{print $12,$10}' 26-July-2019_Tomcat.csv | sort -n  | sort -nr | head -n 100"	           Top 100 Response Time

##################################################################################################################################################################
